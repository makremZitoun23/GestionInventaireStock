name: BuildJavaApp-PushImageToHub-RunImageOnAzVM
env:
  IMAGE_NAME: makremzitoun/inventory-app
on:
 push:
    branches: ['test']

 workflow_dispatch:
jobs:
  Build-Java-App-With-Gradle:
    runs-on: ubuntu-latest
    steps:
     
     - uses: actions/checkout@v3
     
     - name: setup-java
       uses: actions/setup-java@v4
       with: 
        java-version: 17
        distribution: 'temurin'        
    
     - name: build App
       run: mvn clean install

     - run: ls -l ${{ github.workspace }}/target/

     - name: Upload artifact for deployment job
       uses: actions/upload-artifact@v3
       with:
          name: inventory-app 
          path: '${{ github.workspace }}/target/Gestion-inventaire-1.0.jar'
          
  Build-DockerFile-Push-Image-To-DockerHub:
    runs-on: ubuntu-latest
    needs: Build-Java-App-With-Gradle
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
             name: inventory-app
             path: '${{ github.workspace }}/target/Gestion-inventaire-1.0.jar'

      - uses: actions/checkout@v3
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#        with:
 #         version: v0.7.0
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
             name: inventory-app
             path: '${{ github.workspace }}/target/Gestion-inventaire-1.0.jar'
      
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.run_number }}, ${{ env.IMAGE_NAME }}:latest
          file: ./Dockerfile
          context: .

#   SshToAzVM-PullRunContainer:
#     runs-on: ubuntu-latest
#     needs: Build-DockerFile-Push-Image-To-DockerHub
#     steps:
#       - name: SSH into Azure VM and run Docker Compose commands
#         uses: appleboy/ssh-action@master
#         with:
#             host: 137.135.66.160
#             username: azureuser
#             password: azerty1234++
#             port: 22
#             script: |
#               docker pull ${{ env.IMAGE_NAME }}:${{ github.run_number }} && docker images && docker run -d -p 80:8080 ${{ env.IMAGE_NAME }}:${{ github.run_number }}
  
  
          
